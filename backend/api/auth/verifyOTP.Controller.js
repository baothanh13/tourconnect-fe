const nodemailer = require('nodemailer');
const jwt = require('jsonwebtoken');

const SECRET_KEY = "mysecretkey";  // N√™n ƒë∆∞a v√†o bi·∫øn m√¥i tr∆∞·ªùng

const verifyOTP = async (req, res) => {
    try {
        const { email } = req.body;

        if (!email) {
            return res.status(400).json({ message: "Thi·∫øu th√¥ng tin email!" });
        }

        // T·∫°o OTP 6 s·ªë ng·∫´u nhi√™n
        const otp = Math.floor(100000 + Math.random() * 900000).toString();

        // T·∫°o token ch·ª©a OTP, email (n·∫øu c·∫ßn l∆∞u t·∫°m th·ªùi ·ªü client)
        const otpToken = jwt.sign({ email, otp }, SECRET_KEY, { expiresIn: '5m' });  // Token s·ªëng 5 ph√∫t

        // G·ª≠i Email OTP
        await sendOTPEmail(email, otp);

        return res.status(200).json({
            message: "OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i v·ªÅ email!",
            token: otpToken,  // Tr·∫£ v·ªÅ cho client token ƒë·ªÉ x√°c th·ª±c sau
        });

    } catch (error) {
        console.error("L·ªói:", error.message);
        return res.status(500).json({ message: "L·ªói khi g·ª≠i OTP!", error: error.message });
    }
};

// =============================
// ======= sendOTPEmail() ======
// =============================
async function sendOTPEmail(toEmail, otp) {
    const transporter = nodemailer.createTransport({
        service: "zoho",
        host: "smtpro.zoho.in",
        port: 465,
        secure: true,
        auth: {
            user: "thanhvinh@zohomail.com",
            pass: "Vinh12@6",  // C·∫ßn ƒë∆∞a v√†o bi·∫øn m√¥i tr∆∞·ªùng
        },
    });

    const mailOptions = {
        from: '"Bike App" <thanhvinh@zohomail.com>',
        to: toEmail,
        subject: "M√£ x√°c th·ª±c OTP c·ªßa b·∫°n",
        html: `
        <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 600px; margin: auto; padding: 24px; background-color: #f9fafb; border-radius: 10px; border: 1px solid #e2e8f0;">
            <h2 style="color: #1d4ed8; text-align: center;">üîê M√£ x√°c th·ª±c OTP</h2>
            <p style="font-size: 18px; color: #334155;">Xin ch√†o,</p>
            <p style="font-size: 18px; color: #334155;">M√£ OTP c·ªßa b·∫°n l√†:</p>
            <h1 style="text-align: center; color: #ef4444; font-size: 36px;">${otp}</h1>
            <p style="font-size: 16px; color: #6b7280;">M√£ n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t.</p>
            <p style="font-size: 16px; color: #6b7280;">N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ OTP n√†y, vui l√≤ng b·ªè qua email n√†y.</p>
        </div>
        `,
    };

    await transporter.sendMail(mailOptions);
}

module.exports = verifyOTP;
